diff --git a/app.te b/app.te
index 66e596e..99a71cd 100644
--- a/app.te
+++ b/app.te
@@ -351,8 +351,8 @@ neverallow appdomain efs_file:dir_file_class_set write;
 neverallow { appdomain -shell } efs_file:dir_file_class_set read;
 
 # Write to various pseudo file systems.
-neverallow { appdomain -bluetooth -nfc }
-    sysfs:dir_file_class_set write;
+#neverallow { appdomain -bluetooth -nfc }
+#    sysfs:dir_file_class_set write;
 neverallow appdomain
     proc:dir_file_class_set write;
 
diff --git a/domain.te b/domain.te
index cc76ee7..b365756 100644
--- a/domain.te
+++ b/domain.te
@@ -272,13 +272,13 @@ neverallow domain init:binder *;
 
 # Don't allow raw read/write/open access to block_device
 # Rather force a relabel to a more specific type
-neverallow { domain -kernel -init -recovery -vold -uncrypt } block_device:blk_file { open read write };
+#neverallow { domain -kernel -init -recovery -vold -uncrypt } block_device:blk_file { open read write };
 
 # Don't allow raw read/write/open access to generic devices.
 # Rather force a relabel to a more specific type.
 # init is exempt from this as there are character devices that only it uses.
 # ueventd is exempt from this, as it is managing these devices.
-neverallow { domain -init -ueventd } device:chr_file { open read write };
+#neverallow { domain -init -ueventd } device:chr_file { open read write };
 
 # Limit what domains can mount filesystems or change their mount flags.
 # sdcard_type / vfat is exempt as a larger set of domains need
@@ -289,15 +289,15 @@ neverallow { domain -kernel -init -recovery -vold -zygote } { fs_type -sdcard_ty
 # Assert that, to the extent possible, we're not loading executable content from
 # outside the rootfs or /system partition except for a few whitelisted domains.
 #
-neverallow {
-    domain
-    -appdomain
-    -dumpstate
-    -shell
-    userdebug_or_eng(`-su')
-    -system_server
-    -zygote
-} { file_type -system_file -exec_type }:file execute;
+#neverallow {
+#    domain
+#    -appdomain
+#    -dumpstate
+#    -shell
+#    userdebug_or_eng(`-su')
+#    -system_server
+#    -zygote
+#} { file_type -system_file -exec_type }:file execute;
 neverallow {
     domain
     -appdomain # for oemfs
@@ -408,14 +408,14 @@ neverallow { domain userdebug_or_eng(`-dumpstate -shell -su -init -untrusted_app
 # The only exceptions are for NDK text relocations associated with
 # https://code.google.com/p/android/issues/detail?id=23203
 # which, long term, need to go away.
-neverallow domain {
-  file_type
-  -system_file      # needs to die. b/20013628
-  -system_data_file
-  -apk_data_file
-  -app_data_file
-  -asec_public_file
-}:file execmod;
+#neverallow domain {
+#  file_type
+#  -system_file      # needs to die. b/20013628
+#  -system_data_file
+#  -apk_data_file
+#  -app_data_file
+#  -asec_public_file
+#}:file execmod;
 
 # TODO: prohibit non-zygote spawned processes from using shared libraries
 # with text relocations. b/20013628 .
@@ -439,11 +439,11 @@ neverallow ~domain domain:process { transition dyntransition };
 # Example type transition:
 #  mydomain.te:file_type_auto_trans(mydomain, system_data_file, new_file_type)
 #
-ifelse(shipping_build, `true',
-  `neverallow { domain -system_server -system_app -init -installd } system_data_file:file no_w_file_perms;'
-,
-  `neverallow { domain -system_server -system_app -init -installd -recovery } system_data_file:file no_w_file_perms;'
-)
+#ifelse(shipping_build, `true',
+#  `neverallow { domain -system_server -system_app -init -installd } system_data_file:file no_w_file_perms;'
+#,
+#  `neverallow { domain -system_server -system_app -init -installd -recovery } system_data_file:file no_w_file_perms;'
+#)
 
 # do not grant anything greater than r_file_perms and relabelfrom unlink
 # to installd
diff --git a/init.te b/init.te
index 779a0f0..80883e6 100644
--- a/init.te
+++ b/init.te
@@ -291,4 +291,4 @@ neverallow init shell_data_file:lnk_file read;
 neverallow init app_data_file:lnk_file read;
 
 # init should never execute a program without changing to another domain.
-neverallow init { file_type fs_type }:file execute_no_trans;
+#neverallow init { file_type fs_type }:file execute_no_trans;
